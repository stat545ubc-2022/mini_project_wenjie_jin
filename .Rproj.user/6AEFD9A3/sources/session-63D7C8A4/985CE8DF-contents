---
title: "Mini Data-Analysis Deliverable 1"
output: github_document
---

# Welcome to your (maybe) first-ever data analysis project!

And hopefully the first of many. Let's get started:

1.  Install the [`datateachr`](https://github.com/UBC-MDS/datateachr) package by typing the following into your **R terminal**:

<!-- -->

    install.packages("devtools")
    devtools::install_github("UBC-MDS/datateachr")

2.  Load the packages below.

```{r}
library(datateachr)
library(tidyverse)
```

3.  Make a repository in the <https://github.com/stat545ubc-2022> Organization. You will be working with this repository for the entire data analysis project. You can either make it public, or make it private and add the TA's and Lucy as collaborators. A link to help you create a private repository is available on the #collaborative-project Slack channel. 

# Instructions

## For Both Milestones

-   Each milestone is worth 45 points. The number of points allocated to each task will be annotated within each deliverable. Tasks that are more challenging will often be allocated more points.

-   10 points will be allocated to the reproducibility, cleanliness, and coherence of the overall analysis. While the two milestones will be submitted as independent deliverables, the analysis itself is a continuum - think of it as two chapters to a story. Each chapter, or in this case, portion of your analysis, should be easily followed through by someone unfamiliar with the content. [Here](https://swcarpentry.github.io/r-novice-inflammation/06-best-practices-R/) is a good resource for what constitutes "good code". Learning good coding practices early in your career will save you hassle later on!

## For Milestone 1

**To complete this milestone**, edit [this very `.Rmd` file](https://raw.githubusercontent.com/UBC-STAT/stat545.stat.ubc.ca/master/content/mini-project/mini-project-1.Rmd) directly. Fill in the sections that are tagged with `<!--- start your work below --->`.

**To submit this milestone**, make sure to knit this `.Rmd` file to an `.md` file by changing the YAML output settings from `output: html_document` to `output: github_document`. Commit and push all of your work to the mini-analysis GitHub repository you made earlier, and tag a release on GitHub. Then, submit a link to your tagged release on canvas.

**Points**: This milestone is worth 45 points: 43 for your analysis, 1 point for having your Milestone 1 document knit error-free, and 1 point for tagging your release on Github.

# Learning Objectives

By the end of this milestone, you should:

-   Become familiar with your dataset of choosing
-   Select 4 questions that you would like to answer with your data
-   Generate a reproducible and clear report using R Markdown
-   Become familiar with manipulating and summarizing your data in tibbles using `dplyr`, with a research question in mind.

# Task 1: Choose your favorite dataset (10 points)

The `datateachr` package by Hayley Boyce and Jordan Bourak currently composed of 7 semi-tidy datasets for educational purposes. Here is a brief description of each dataset:

-   *apt_buildings*: Acquired courtesy of The City of Toronto's Open Data Portal. It currently has 3455 rows and 37 columns.

-   *building_permits*: Acquired courtesy of The City of Vancouver's Open Data Portal. It currently has 20680 rows and 14 columns.

-   *cancer_sample*: Acquired courtesy of UCI Machine Learning Repository. It currently has 569 rows and 32 columns.

-   *flow_sample*: Acquired courtesy of The Government of Canada's Historical Hydrometric Database. It currently has 218 rows and 7 columns.

-   *parking_meters*: Acquired courtesy of The City of Vancouver's Open Data Portal. It currently has 10032 rows and 22 columns.

-   *steam_games*: Acquired courtesy of Kaggle. It currently has 40833 rows and 21 columns.

-   *vancouver_trees*: Acquired courtesy of The City of Vancouver's Open Data Portal. It currently has 146611 rows and 20 columns.

**Things to keep in mind**

-   We hope that this project will serve as practice for carrying our your own *independent* data analysis. Remember to comment your code, be explicit about what you are doing, and write notes in this markdown document when you feel that context is required. As you advance in the project, prompts and hints to do this will be diminished - it'll be up to you!

-   Before choosing a dataset, you should always keep in mind **your goal**, or in other ways, *what you wish to achieve with this data*. This mini data-analysis project focuses on *data wrangling*, *tidying*, and *visualization*. In short, it's a way for you to get your feet wet with exploring data on your own.

And that is exactly the first thing that you will do!

1.1 Out of the 7 datasets available in the `datateachr` package, choose **4** that appeal to you based on their description. Write your choices below:

**Note**: We encourage you to use the ones in the `datateachr` package, but if you have a dataset that you'd really like to use, you can include it here. But, please check with a member of the teaching team to see whether the dataset is of appropriate complexity. Also, include a **brief** description of the dataset here to help the teaching team understand your data.

<!-------------------------- Start your work below ---------------------------->
**1: steam_games\
2: cancer_sample\
3: vancouver_trees\
4: apt_buildings**

<!----------------------------------------------------------------------------->

1.2 One way to narrowing down your selection is to *explore* the datasets. Use your knowledge of dplyr to find out at least *3* attributes about each of these datasets (an attribute is something such as number of rows, variables, class type...). The goal here is to have an idea of *what the data looks like*.

*Hint:* This is one of those times when you should think about the cleanliness of your analysis. I added a single code chunk for you below, but do you want to use more than one? Would you like to write more comments outside of the code chunk?

<!-------------------------- Start your work below ---------------------------->
**For this part, I chose steam_games, flow_sample, vanvouver_trees, and cancer_sample database.
For each database, I have explored the number of rows, columns, variables, and class types.**

```{r}
### 
datateachr::steam_games
class(steam_games)
datateachr::flow_sample
class(flow_sample)
datateachr::vancouver_trees
class(vancouver_trees)
datateachr::cancer_sample
class(cancer_sample)
```


<!----------------------------------------------------------------------------->

1.3 Now that you've explored the 4 datasets that you were initially most interested in, let's narrow it down to 2. What lead you to choose these 2? Briefly explain your choices below, and feel free to include any code in your explanation.

<!-------------------------- Start your work below ---------------------------->
**After exploring those four database, due to the limited information of the steam_game and flow_sample, I decided to choose the cancer_sample and vancouver_trees since there are more available information.**
<!----------------------------------------------------------------------------->

1.4 Time for the final decision! Going back to the beginning, it's important to have an *end goal* in mind. For example, if I had chosen the `titanic` dataset for my project, I might've wanted to explore the relationship between survival and other variables. Try to think of 1 research question that you would want to answer with each dataset. Note them down below, and make your final choice based on what seems more interesting to you!

<!-------------------------- Start your work below ---------------------------->
**Option1: vancouver_trees database: I would like to explore whethere the root barrier will have any effect to the tree diameter.**
**Option2: cancer_sample database: I would like to explore which attributes can effectively help us predict whether the cancer is benign or malicious.**
**Finally, I decided to choose the cancer_sample database since I want to explore more of this database to see which attributes can lead the cancer cell to be malicious or benign.**
<!----------------------------------------------------------------------------->

# Important note

Read Tasks 2 and 3 *fully* before starting to complete either of them. Probably also a good point to grab a coffee to get ready for the fun part!

This project is semi-guided, but meant to be *independent*. For this reason, you will complete tasks 2 and 3 below (under the **START HERE** mark) as if you were writing your own exploratory data analysis report, and this guidance never existed! Feel free to add a brief introduction section to your project, format the document with markdown syntax as you deem appropriate, and structure the analysis as you deem appropriate. Remember, marks will be awarded for completion of the 4 tasks, but 10 points of the whole project are allocated to a reproducible and clean analysis. If you feel lost, you can find a sample data analysis [here](https://www.kaggle.com/headsortails/tidy-titarnic) to have a better idea. However, bear in mind that it is **just an example** and you will not be required to have that level of complexity in your project.

# Task 2: Exploring your dataset (15 points)

If we rewind and go back to the learning objectives, you'll see that by the end of this deliverable, you should have formulated *4* research questions about your data that you may want to answer during your project. However, it may be handy to do some more exploration on your dataset of choice before creating these questions - by looking at the data, you may get more ideas. **Before you start this task, read all instructions carefully until you reach START HERE under Task 3**.

2.1 Complete *4 out of the following 8 exercises* to dive deeper into your data. All datasets are different and therefore, not all of these tasks may make sense for your data - which is why you should only answer *4*. Use *dplyr* and *ggplot*.

1.  Plot the distribution of a numeric variable.
2.  Create a new variable based on other variables in your data (only if it makes sense)
3.  Investigate how many missing values there are per variable. Can you find a way to plot this?
4.  Explore the relationship between 2 variables in a plot.
5.  Filter observations in your data according to your own criteria. Think of what you'd like to explore - again, if this was the `titanic` dataset, I may want to narrow my search down to passengers born in a particular year...
6.  Use a boxplot to look at the frequency of different observations within a single variable. You can do this for more than one variable if you wish!
7.  Make a new tibble with a subset of your data, with variables and observations that you are interested in exploring.
8.  Use a density plot to explore any of your variables (that are suitable for this type of plot).

2.2 For each of the 4 exercises that you complete, provide a *brief explanation* of why you chose that exercise in relation to your data (in other words, why does it make sense to do that?), and sufficient comments for a reader to understand your reasoning and code.

<!-------------------------- Start your work below ---------------------------->
**Task 2**
**By exploring the data, I hope I can find which variable/property can be helpful to predict whether the cancer is benigh or malicious.**

**1. Pick the 1st question to see for the relationship between cancer cells' radius mean and diagnosis. It turns out that cancer's radius in the range from 12 to 15 tend to be benign, and cancers in the range from 15 to 20 tend to be malicious.**
```{r}
count <- ggplot(cancer_sample, aes(x = unlist(cancer_sample$radius_mean), y = ..count.., fill = unlist(cancer_sample$diagnosis))) +
   geom_histogram()
print(count)

```
**2. Pick the 8th question, to find the density plot of a variable:**
**As the following graph shows, the benigh cancers tend to be more compact comparing with the malicious cancers.**
```{r}
ggplot(cancer_sample, aes(x = unlist(cancer_sample$compactness_mean), y = ..density.., fill = unlist(cancer_sample$diagnosis))) +  geom_density(alpha = 0.5)
```
**3. Pick the 3rd question, to see is there any missing value?**
**As we can see in the output, there is no any missing value that represents that the database is reliable.**

```{r}
any(is.na(cancer_sample))
```


**4. Pick the 6th question, to make a boxplot with a comparison of concavity_mean between cancers that is malicious and benign.**

```{r}
ggplot(cancer_sample, aes(unlist(cancer_sample$diagnosis), unlist(cancer_sample$concavity_mean))) + geom_boxplot()

```
<!----------------------------------------------------------------------------->

# Task 3: Write your research questions (5 points)

So far, you have chosen a dataset and gotten familiar with it through exploring the data. Now it's time to figure out 4 research questions that you would like to answer with your data! Write the 4 questions and any additional comments at the end of this deliverable. These questions are not necessarily set in stone - TAs will review them and give you feedback; therefore, you may choose to pursue them as they are for the rest of the project, or make modifications!

<!--- *****START HERE***** --->
**Question1: Is there any outliers in those measured variables. To make this database more meaningful, we should detect outliers and potentially remove outliers for data processing. 

Question2: Find out is the number of benign and malicious cancers balanced since if it is not balanced the database may not reliable.
For instance, if 90 percent of the data are malicious then the conlusion we made will be biased 

Question3: How could each variable help us to predict the cancer is malicious or benign.

Question4: Which variables are helpless for predicting the cancer is malicious or benign.**

# Task 4: Process and summarize your data (13 points)

From Task 2, you should have an idea of the basic structure of your dataset (e.g. number of rows and columns, class types, etc.). Here, we will start investigating your data more in-depth using various data manipulation functions.

### 1.1 (10 points)

Now, for each of your four research questions, choose one task from options 1-4 (summarizing), and one other task from 4-8 (graphing). You should have 2 tasks done for each research question (8 total). Make sure it makes sense to do them! (e.g. don't use a numerical variables for a task that needs a categorical variable.). Comment on why each task helps (or doesn't!) answer the corresponding research question.

Ensure that the output of each operation is printed!

**Summarizing:**

1.  Compute the *range*, *mean*, and *two other summary statistics* of **one numerical variable** across the groups of **one categorical variable** from your data.
2.  Compute the number of observations for at least one of your categorical variables. Do not use the function `table()`!
3.  Create a categorical variable with 3 or more groups from an existing numerical variable. You can use this new variable in the other tasks! *An example: age in years into "child, teen, adult, senior".*
4.  Based on two categorical variables, calculate two summary statistics of your choosing.

**Graphing:**

5.  Create a graph out of summarized variables that has at least two geom layers.
6.  Create a graph of your choosing, make one of the axes logarithmic, and format the axes labels so that they are "pretty" or easier to read.
7.  Make a graph where it makes sense to customize the alpha transparency.
8.  Create 3 histograms out of summarized variables, with each histogram having different sized bins. Pick the "best" one and explain why it is the best.

Make sure it's clear what research question you are doing each operation for!

<!------------------------- Start your work below ----------------------------->
**Question1:**

**Is there any outliers in those measured variables**

**Summarizing:**
**Compute the range, mean, and two other summary statistics of one numerical variable across the groups of one categorical variable from your data.**

```{r}
summary(cancer_sample$area_se)
```

**Graphing:**
**Create a graph out of summarized variables:**
```{r}
ggplot(data=cancer_sample, aes(x=unlist(cancer_sample$diagnosis), y=area_se)) + geom_boxplot() + geom_count()
```

**As the shown above, I noticed that there are some extremely high area_se values exist in the dataset. As the result, we should try to remove those outliers before manipulating this database.**

**Question2:**

**Find out is the number of benign and malicious cancers balanced since if it is not balanced the database may not reliable.**

**Summarizing:**
**Compute the number of observations for at least one of your categorical variables.**
```{r}
summary(cancer_sample$diagnosis)
```

**Graphing:**
**Create a graph out of summarized variables:**
```{r}
ggplot(cancer_sample, aes(unlist(cancer_sample$diagnosis), ..count..)) + geom_bar( ) 
```

**According to the output shown above, the number of benign and malicious cancers are basically balanced. As a result, I think this database is reliable and we could further explore this database.** 

**Question3:**

**How could each variable help us to predict the cancer is malicious or benign.**

**Summarizing:**
**Based on two categorical variables, calculate two summary statistics of your choosing.**
```{r}
benign <- filter(cancer_sample, diagnosis == 'B')
malicious <- filter(cancer_sample, diagnosis == 'M')
summary(benign$concavity_mean)
summary(malicious$concavity_mean)
##
summary(benign$area_se)
summary(malicious$area_se)

```

**Graphing:**
**Create a graph out of summarized variables:**
```{r}
ggplot(cancer_sample, aes(unlist(cancer_sample$diagnosis), concavity_mean)) + geom_boxplot() + 
geom_count()

ggplot(data=cancer_sample, aes(x=unlist(cancer_sample$diagnosis), y=area_se)) + geom_boxplot() + geom_count()
```

**As shown above, the concavity_mean and area_se are all good indicators of judging whether the cancer is benign or malicious.**
**For instance, if the cancer has the concavity_mean within the range from 0.02 to 0.06, it is very likely to be benign. However, if the cancer has the concavity_mean within the range from 0.11 to 0.21, it is very likely to be malicious.**

**Question4:**

**Which variables are helpless for predicting the cancer is malicious or benign.**

**Summarizing:**
**Based on two categorical variables, calculate two summary statistics of your choosing.**
```{r}
summary(benign$fractal_dimension_mean)
summary(malicious$fractal_dimension_mean)
##
summary(benign$symmetry_mean)
summary(malicious$symmetry_mean)
##
summary(benign$smoothness_mean)
summary(malicious$smoothness_mean)
##
summary(benign$texture_mean)
summary(malicious$texture_mean)
```


**Graphing:**
**Make a graph where it makes sense to customize the alpha transparency.**
```{r}
ggplot(cancer_sample, aes(x = unlist(cancer_sample$fractal_dimension_mean), y = ..density.., fill = unlist(cancer_sample$diagnosis))) +  geom_density(alpha = 0.5)

ggplot(cancer_sample, aes(x = unlist(cancer_sample$symmetry_mean), y = ..density.., fill = unlist(cancer_sample$diagnosis))) +  geom_density(alpha = 0.5)

ggplot(cancer_sample, aes(x = unlist(cancer_sample$smoothness_mean), y = ..density.., fill = unlist(cancer_sample$diagnosis))) +  geom_density(alpha = 0.5)

ggplot(cancer_sample, aes(x = unlist(cancer_sample$texture_mean), y = ..density.., fill = unlist(cancer_sample$diagnosis))) +  geom_density(alpha = 0.5)
```
**As shown above, there are some variable is relatively helpless for distinguishing between benign and malicious cancer. For instance, as the density graph of fractal_dimension_mean shows, for both benign and malicious cancers, they have a lot of overlaps.**
**As a result, when try to determine whether the cancer is benign or malicious, we could ignore those variables.**
<!----------------------------------------------------------------------------->

### 1.2 (3 points)

Based on the operations that you've completed, how much closer are you to answering your research questions? Think about what aspects of your research questions remain unclear. Can your research questions be refined, now that you've investigated your data a bit more? Which research questions are yielding interesting results?

<!-------------------------- Start your work below ---------------------------->
**I think in some extent my result answered those research questions.**
**However, my answer still can be further improved to be more clear and helpful. For instance, for question3, I found the concavity_mean and area_se are significantly helpful for identifying cancers are benign or malicious. However, it will be more helpful if I can find a weight to assign to each variable when using those two. For instance, the concavity_mean may have 70 percent weight and the area_se may have 30 percent contributions for the diagnosis. By assigning them a weight, it could help us predict more accurate.**
<!----------------------------------------------------------------------------->

### Attribution

Thanks to Icíar Fernández Boyano for mostly putting this together, and Vincenzo Coia for launching.